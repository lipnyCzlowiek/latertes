---
layout: post
title:  "Znaczenie dobrego nazewnictwa w programowaniu"
date:   2019-07-05 18:52:08 +0100
categories: czysty kod, wnioski
---
## Wstęp
Jeśli podobnie jak ja jesteś programistą to na pewno nie raz ucierpiałeś z powodu niechlujnego, niepoprawnego i mylącego nazewnictwa w kodzie. Ciężko jest przecenić ten aspekt naszej pracy a mimo to tak niewielu developerów poświęca należytą uwagę aby nazwy zmiennych, klas czy funkcji prawidłowo oddawały ich przeznaczenie, intencję czy rezultat działania. W tym krótkim wpisie postaram się przedstawić najważniejsze wnioski, które wyciągnąłem z lektury książki *Czysty Kod* w zwięzłym formacie.

### Samodokumentujący się kod
Jeśli potrzeba postawić komentarz przy nazwie zmiennej bądź funkcji to znaczy, że coś poszło nie tak w procesie jej deklarowania. Nazwy powinny być opisowe i jasno przedstawiać przeznaczenie danego tokenu. Niech zmienne informują o ich przeznaczeniu a funkcje o efekcie ich działania.

### Krócej nie znaczy lepiej
Dni kiedy trzeba było oszczędzać bajty na długościach nazw są daleko za nami. Nie bójmy się stosowania dłuższych nazw ponieważ czas i frustracja zaoszczędzona sobie (i innym) podczas późniejszego powrotu do kodu jest warta tych kilku dodatkowych uderzeń w klawisze klawiatury. Dłuższe nazwy są również dużo prostsze do wyszukania w kodzie.

### Nazwy są dla ludzi
Jeśli nazywasz zmienne w stylu *const accmgrpl = ...* to równie dobrze możesz rzucić web dev i zająć się pisaniem czystego kodu maszynowego. Staraj się używać nazw które da się łatwo wymówić. Może ta porada wydaje się dziwna ale jak opisuje to Robert Martin, ułatwi Ci to współpracę z innym programistami jeśli nadejdzie potrzeby omówienia działania fragmentu twojego kodu.

### Leksykon bazowy
Od samego początku pisania kodu zdecyduj się na konkretne nazwy dla różnych pojęć i staraj się ich trzymać. Przykładowo, jeśli klasa A definiuję metodę *getPosts* do pobierania postów z bazy dancych to do pobierania komentarzy również zastosuj przedrostek get a nie np. fetch albo retrieve (a więc *getComments*).

>Seria postów pod tytułem *XXX* to esencja moich notatek i wniosków wyciągniętych z lektury wspaniałej książki *Czysty Kod. Podręcznik dobrego programisty* autorstwa Roberta Martina. Kliknij [tutaj](http://www.sampleurl.com) aby zobaczyć wszystkie wpisy z tej kolekcji.
